{"version":3,"file":"static/js/main.37b62863.js","mappings":"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","sources":["src/constants.js","src/components/Keyboard/Keyboard.styles.js","src/components/Keyboard/Keyboard.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const colors = {\n  black: \"#121214\",\n  darkgrey: \"#3A3A3D\",\n  grey: \"#818384\",\n  lightgrey: \"#D7DADC\",\n  primary: \"#538D4E\",\n  secondary: \"#B59F3B\",\n};\n\nexport const colorsToEmoji = {\n  [colors.darkgrey]: \"⬛\",\n  [colors.primary]: \"🟩\",\n  [colors.secondary]: \"🟧\",\n};\n\nexport const LEFT = \"LEFT\";\nexport const CLEAR = \"DEL\";\n\nexport const keys = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n  [LEFT, \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", CLEAR],\n];\n","import { StyleSheet, Dimensions } from \"react-native\";\nimport { keys, colors } from \"../../constants\";\n\nconst screenWidth = Dimensions.get(\"window\").width;\nexport const keyWidth = (screenWidth - 10) / keys[0].length;\nconst keyHeight = keyWidth * 1.3;\n\nexport default StyleSheet.create({\n  keyboard: {\n    alignSelf: \"stretch\",\n    marginTop: \"auto\",\n  },\n  row: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  key: {\n    width: keyWidth - 7,\n    height: keyHeight - 10,\n    margin: 3,\n    borderRadius: 3,\n    backgroundColor: colors.grey,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  keyText: {\n    color: colors.lightgrey,\n    fontWeight: \"bold\",\n    fontFamily: 'Verdana',\n    fontSize: 13,\n  },\n});\n","import { View, Text, Pressable } from \"react-native\";\nimport { keys, LEFT, CLEAR, colors } from \"../../constants\";\nimport styles, { keyWidth } from \"./Keyboard.styles\";\n\nconst Keyboard = ({\n  onKeyPressed = () => {},\n  greenCaps = [],\n  yellowCaps = [],\n  greyCaps = [],\n}) => {\n  const isLongButton = (key) => {\n    return key === LEFT || key === CLEAR;\n  };\n\n  const getKeyBGColor = (key) => {\n    if (greenCaps.includes(key)) {\n      return colors.primary;\n    }\n    if (yellowCaps.includes(key)) {\n      return colors.secondary;\n    }\n    if (greyCaps.includes(key)) {\n      return colors.darkgrey;\n    }\n    return colors.grey;\n  };\n\n  return (\n    <View style={styles.keyboard}>\n      {keys.map((keyRow, i) => (\n        <View style={styles.row} key={`row-${i}`}>\n          {keyRow.map((key) => (\n            <Pressable\n              onPress={() => onKeyPressed(key)}\n              disabled={greyCaps.includes(key)}\n              key={key}\n              style={[\n                styles.key,\n                isLongButton(key) ? { width: keyWidth * 1.3 } : {},\n                { backgroundColor: getKeyBGColor(key) },\n              ]}\n            >\n              <Text style={styles.keyText}>{key.toUpperCase()}</Text>\n            </Pressable>\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Keyboard;\n","import { useEffect, useState, useRef } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, SafeAreaView, Button, ScrollView, TouchableOpacity, Alert, Dimensions, Platform } from 'react-native';\nimport { colors, CLEAR, LEFT, colorsToEmoji } from \"./src/constants\";\nimport Keyboard from \"./src/components/Keyboard\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Clipboard from \"expo-clipboard\";\nimport { useFonts } from 'expo-font';\n// import * as SplashScreen from 'expo-splash-screen';\n\nconst puzzle_data_structure = {\n  current_puzzle: 1,\n  puzzles: {\n    1: {\n      ciphersequence: \"hqjuibmswaynpreovtfdczxlgk\",\n      cipher: 'bet meu fe neziu dsi xetnu',\n      phrase: 'for god so loved the world',\n      topic: 'Love',\n      book: 'John',\n      chapter: \"3\",\n      verse: \"16\",\n      isSolved: false,\n      current_state: '',\n      hints: { 'e': 'o', 'u': 'd', ' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 2, // The ID of the next puzzle\n    },\n    2: {\n      ciphersequence: \"hqjuibmswaynpreovtfdczxlgk\",\n      cipher: 'nid hnn dshd gec ue qi ueri wr nezi.',\n      phrase: 'let all that you do be done in love.',\n      topic: 'Love',\n      book: '1 Corinthians',\n      chapter: \"16\",\n      verse: \"14\",\n      isSolved: false,\n      current_state: '',\n      hints: { 'n': 'l', 'r': 'n', ' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 1, // The ID of the next puzzle\n    },\n    // Add more puzzles here\n  },\n};\n\n\n\n\n\nconst copyArray = (arr) => {\n  return [...arr.map((rows) => [...rows])];\n};\n\nconst TitleBar = ({ puzzleNumber, onPuzzlesPress, onSettingsPress }) => (\n  <View style={styles.titleBar}>\n    <TouchableOpacity style={styles.button} onPress={onPuzzlesPress}>\n      <Text style={styles.buttonText}> Puzzles</Text>\n    </TouchableOpacity>\n \n    <View style={styles.titleContainer}>\n      <Text style={styles.title}>Biblegram</Text>\n      <Text style={styles.puzzleNumber}> Puzzle #{puzzleNumber} </Text>\n    </View>\n\n\n    <TouchableOpacity style={styles.button} onPress={onSettingsPress}>\n      <Text style={styles.buttonText}>Settings</Text>\n    </TouchableOpacity>\n   \n  </View>\n);\n\n\n\nexport default function App() {\n\n\tconst [puzzleData, setPuzzleData] = useState(null);\n\n  const [showPuzzles, setShowPuzzles] = useState(false);\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [showAboutBiblegram, setShowAboutBiblegram] = useState(false);\n\n\tconst [currentState, setCurrentState] = useState('');\n\tconst [selectedIndex, setSelectedIndex] = useState(0);\n\n\n  const screenWidth = Dimensions.get('window').width;\n  const fontSize = 18; // Set the font size of the text here\n  const characterWidth = fontSize * 0.6; // A rough estimate for character width; adjust as needed\n  const charactersPerRow = Math.floor(screenWidth / characterWidth);\n\n\n  const findFirstNonHintIndex = () => {\n    \n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n  \n    for (let i = 0; i < cipherChars.length; i++) {\n      if (!currentPuzzle.hints[cipherChars[i]]) {\n        return i;\n      }\n    }\n  \n    return null;\n  };\n\n  //const onKeyPressedRef = useRef();\n\n  \n  useEffect(() => {\n    loadPuzzleData();\n  }, []);\n\n\n  \n\n\tuseEffect(() => {\n  \tif (puzzleData) {\n    \tconst currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    \tsetCurrentState(\n      \tcurrentPuzzle.cipher\n        \t.split('')\n        \t.map((char) => currentPuzzle.hints[char] || '_')\n        \t.join('')\n    \t);\n      const cipherChars = currentPuzzle.cipher.split('');\n      setSelectedIndex(findFirstIndex(cipherChars, currentPuzzle.hints));\n  \t}\n\t}, [puzzleData]);\n\n\n\n  useEffect(() => {\n    if (Platform.OS === 'web')\n    {\n    //console.log(\"qweqe \"); console.log(puzzleData);\n      window.addEventListener('keydown', handleKeyDown);\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [puzzleData, currentState, selectedIndex]);\n  \n\n\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  const handleKeyDown = (event) => {\n    \n    const key = event.key.toLowerCase();\n    \n    if (alphabet.includes(key) || key === 'backspace' ||\n      key === ' ' || key === \"arrowleft\" || key === \"arrowright\") {\n        //console.log(key)\n        \n        onKeyPressed(key);\n      //onKeyPressedRef.current(key);\n    }\n  };\n  \n\n\tconst updateCurrentState = (newChar) => {\n    //console.log(\"hi\");\n  \tconst currentStateChars = currentState.split('');\n  \tif (!currentPuzzle.hints[currentPuzzle.cipher[selectedIndex]]) {\n    \tcurrentStateChars[selectedIndex] = newChar;\n    \tsetCurrentState(currentStateChars.join(''));\n  \t}\n\t};\n\n  const loadPuzzleData = async () => {\n    try {\n      const storedData = await AsyncStorage.getItem(\"puzzleData\");\n      if (storedData) {\n        setPuzzleData(JSON.parse(storedData));\n      } else {\n        setPuzzleData(puzzle_data_structure);\n        savePuzzleData(puzzle_data_structure);\n      }\n    } catch (error) {\n      console.error(\"Error loading puzzle data:\", error);\n    }\n  };\n  \n\n  const savePuzzleData = async (data) => {\n    try {\n      await AsyncStorage.setItem(\"puzzleData\", JSON.stringify(data));\n    } catch (error) {\n      console.error(\"Error saving puzzle data:\", error);\n    }\n  };\n\n  \n  const setNextNonHintIndex = (index) => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n    let nextIndex = index;\n   \n    \n    if(currentState.includes(\"_\")){\n      do {\n        nextIndex = (nextIndex + 1) % cipherChars.length;\n      } //while (currentPuzzle.hints[cipherChars[nextIndex]] && currentState[nextIndex != \"_\"]);\n      while (currentState[nextIndex] != \"_\");\n      //console.log(nextIndex);\n      setSelectedIndex(nextIndex);\n    }\n  };\n\n  function checkIfSolved(currentState, currentPuzzle) {\n    return currentState === currentPuzzle.phrase;\n  }\n  \n\n\tconst renderCipherAndCurrentState = (duplicateChars) => {\n  \tconst currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n  \tconst cipherChars = currentPuzzle.cipher.split('');\n  \tconst currentStateChars = currentState.split('');\n\n\n    let cipherChar = currentPuzzle.cipher[selectedIndex];\n    let currentStateChar = currentState[selectedIndex];\n \n    if (!!currentPuzzle.hints[cipherChar]  && selectedIndex < cipherChars.length)\n    {\n        setSelectedIndex(selectedIndex+1); \n    } \n    \n    //\n\n    return (\n      <View style={styles.inputText}>\n        {cipherChars.map((char, index) => {\n          const isHint = currentPuzzle.hints[char];\n          const isSelected = index === selectedIndex;\n          const isSameCipher = selectedIndex !== null && currentPuzzle.cipher[selectedIndex] === char;\n          const isDuplicate = duplicateChars.includes(currentStateChars[index]);\n\n          return (\n            <TouchableOpacity\n              key={index}\n              onPress={() => {\n                if (!isHint) {\n                  setSelectedIndex(index);\n                }\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  margin: 2,\n                  padding: 2,\n                  backgroundColor: isSelected\n                    ? 'orange' : isSameCipher\n                    ? 'lightcyan' : 'transparent',\n                  borderRadius: 3,\n                }}\n              >\n               \n                <Text\n                  style={{\n                    //fontFamily: 'Verdana',\n                    textTransform: 'uppercase',\n                    fontSize: 18,\n                    color: isHint ? 'normal' : 'black',\n                    fontWeight: isHint ? 'normal' : 'normal',\n                  }}\n                >\n                  {currentStateChars[index] === \"_\" ? \" \" : currentStateChars[index]}\n                </Text>\n               \n                {!isHint && (\n                  <Text\n                    style={{\n                      //fontFamily: 'Verdana',\n                      fontSize: 18,\n                      color: isDuplicate ? 'red' : 'gray',\n                      marginTop: -17,\n                      fontWeight: 'bold',\n                      //margin: 2,\n                    }}\n                  >\n                     _\n                  </Text>\n                )}\n\n                {!isHint && <Text style={{ \n                  //fontFamily: 'Verdana',\n                  textTransform: 'uppercase',\n                  fontSize: 15\n                }}>{char}</Text>}\n              </View>\n            </TouchableOpacity>\n          );\n          \n          \n        })\n        }\n      </View>\n    );\n\n\t};\n\n  const isHint = (index) => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChar = currentPuzzle.cipher[index];\n    return !!currentPuzzle.hints[cipherChar];\n  };\n\n  const setPuzzleAsSolved = (puzzleId) => {\n    setPuzzleData((prevPuzzleData) => {\n      const updatedPuzzles = { ...prevPuzzleData.puzzles };\n      updatedPuzzles[puzzleId].isSolved = true;\n      return { ...prevPuzzleData, puzzles: updatedPuzzles };\n    });\n  };\n\n  const setCurrentPuzzle = (puzzleId) => {\n    setPuzzleData((prevPuzzleData) => {\n      return { ...prevPuzzleData, current_puzzle: puzzleId };\n    });\n  };\n  \n  \n  const checkIfPuzzleSolved = () => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    if (currentState === currentPuzzle.phrase) {\n      // Update the puzzleData without affecting the current_state\n      setPuzzleData((prevData) => {\n        const updatedPuzzles = {\n          ...prevData.puzzles,\n          [prevData.current_puzzle]: {\n            ...prevData.puzzles[prevData.current_puzzle],\n            isSolved: true,\n            end_time: new Date().toISOString(),\n          },\n        };\n        return { ...prevData, puzzles: updatedPuzzles };\n      });\n    }\n  };\n  \n\n  const onKeyPressed = (key) => {\n\n    \n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n    const selectedCipherChar = cipherChars[selectedIndex];\n    //console.log(\"238 \"+ currentPuzzle);\n    // if game is already over\n    //console.log(\"zxc \" + currentPuzzle[\"isSolved\"]); \n    if(currentPuzzle.isSolved)\n    {\n      return;\n    }\n\n    let nextIndex = selectedIndex;\n    if(key == \"arrowright\" || key == \" \")\n    {\n      nextIndex = (nextIndex + 1) % cipherChars.length;\n      setSelectedIndex(nextIndex);\n      return;\n    }\n    if(key == \"arrowleft\" || key == LEFT)\n    {\n      if(selectedIndex == 0)\n      {\n        const maxIndex = cipherChars.length -1 ;\n        for (let i = maxIndex; i >= 0; i--)\n        {\n          if (!isHint(i))\n          {\n            setSelectedIndex(i);\n            break;\n          }\n        }\n      }\n      key = LEFT;\n    }\n    if(key == \"backspace\")\n    {\n      key = CLEAR\n    }\n \n\n    \n    const newState = currentState.split('').map((currentChar, index) => {\n      if (cipherChars[index] === selectedCipherChar && !isHint(index)) {\n        if (key === CLEAR)\n        {\n          return \"_\";\n        } \n        else if (key === LEFT) \n        {\n          return currentChar;\n        }\n        return key;\n      }\n     \n      return currentChar;\n    });\n    \n \n    //console.log(newState);\n    const newStateJoin = newState.join('');\n    setCurrentState(newStateJoin);\n  \n\n \n      // Check if the puzzle is solved\n    if (checkIfSolved(newStateJoin, currentPuzzle)) {\n      //console.log(\"is solved \");\n      setPuzzleData((prevData) => {\n        const updatedPuzzles = {\n          ...prevData.puzzles,\n          [prevData.current_puzzle]: {\n            ...prevData.puzzles[prevData.current_puzzle],\n            isSolved: true,\n            end_time: new Date().toISOString(),\n          },\n        };\n        return { ...prevData, puzzles: updatedPuzzles };\n      });\n      //alert('Puzzle solved!');\n      \n    // You can add additional logic here, e.g., updating the puzzle data, moving to the next puzzle, etc.\n    }\n    //console.log(\"solved \" +currentPuzzle.isSolved);\n    if (key == CLEAR)\n    {\n      return;\n    } else if (key === LEFT) {\n      // Move the selected index back a space if it is in bounds and not a hint\n      let newSelectedIndex = selectedIndex - 1;\n      while (newSelectedIndex >= 0 && currentPuzzle.hints[currentPuzzle.cipher[newSelectedIndex]]) {\n        newSelectedIndex--;\n      } \n      if (newSelectedIndex >= 0) {\n        setSelectedIndex(newSelectedIndex);\n      }\n    } else\n    {\n      setNextNonHintIndex(selectedIndex);\n    }\n\n  } \n\n  const goToNextPuzzle = () => {\n    setPuzzleData((prevData) => {\n      return { ...prevData, current_puzzle: prevData.puzzles[puzzleData.current_puzzle].next_puzzle };\n    });\n  };\n\n\n  const renderPuzzle = () => {\n    if (!puzzleData) return null;\n\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    //console.log(\"qwwqe \" + currentState);\n    const currentStateChars = currentState.split('');\n    //console.log(\"qwe \" + currentStateChars);\n    const greyCaps = Object.values(currentPuzzle.hints);\n\n    const duplicates = currentStateChars.reduce((acc, char, index) => {\n      if (!greyCaps.includes(char)) {\n        if (acc[char]) {\n          acc[char].push(index);\n        } else {\n          acc[char] = [index];\n        }\n      }\n      return acc;\n    }, {});\n    \n    const duplicateChars = Object.keys(duplicates).filter(\n      (char) => {\n        const cipherCharIndexes = duplicates[char];\n        const uniqueCipherChars = new Set(cipherCharIndexes.map(index => currentPuzzle.cipher[index]));\n        return uniqueCipherChars.size > 1;\n      }\n    ).filter(char => char != '_');\n    \n    const uniqueChars = [...new Set(currentState)].filter(\n      (char) => !greyCaps.includes(char) && !duplicateChars.includes(char)\n    );\n\n  \n    return (\n      <View style={styles.container}>\n        {currentPuzzle.isSolved ? (\n          <View>\n\n            <Text style={styles.solvedPuzzle}>{currentPuzzle.phrase}</Text>\n            <Text style={styles.solvedReference}>{currentPuzzle.book} {currentPuzzle.chapter}:{currentPuzzle.verse}</Text>\n            <View style={[{ width: \"95%\", margin:10, alignItems:'center' }]}><Button title=\"Go to Next Puzzle\" onPress={goToNextPuzzle} /></View>\n          </View>\n        ) : (\n          <View style={styles.mainContainer}>\n            {renderCipherAndCurrentState(duplicateChars)}\n\n            <View style={styles.hintsContainer}>\n              <Text style={styles.hintText}> - {currentPuzzle.book}</Text>\n              <Text style={styles.hintText}> Topic: \"{currentPuzzle.topic}\"</Text>\n              <Text> </Text>\n            </View>\n\n            <View style={styles.keyboardContainer}>\n              <Keyboard\n              onKeyPressed={onKeyPressed} \n              greyCaps={greyCaps}\n              yellowCaps={duplicateChars}\n              greenCaps={uniqueChars} \n              />\n            </View>\n          </View>\n        )}\n \n      </View>\n    );\n\n  };\n\n\n  const handlePuzzlesPress = () => {\n    //console.log(\"hllo..?\");\n    setShowSettings(false);\n    setShowAboutBiblegram(false);\n    setShowPuzzles(!showPuzzles);\n  };\n\n  const handleSettingsPress = () => {\n    setShowPuzzles(false);\n    setShowAboutBiblegram(false);\n    setShowSettings(!showSettings);\n  };\n\n\n  const PuzzleSelection = ({ currentPuzzleId, puzzles, onSelect }) => {\n    return (\n      <View style={styles.puzzleSelectionContainer}>\n        {Object.keys(puzzles).map((key) => (\n          <TouchableOpacity\n            key={key}\n            style={styles.puzzleItem}\n            onPress={() => {\n              //console.log(\"Qweqw \" + key);\n              //console.log(currentPuzzleId)\n              if (key !== currentPuzzleId) {\n                onSelect(key);\n              }\n              else\n              {\n                setShowPuzzles(false);\n              }\n            }}\n          >\n            <Text style={styles.puzzleItemText}>\n              Puzzle {key} {puzzles[key].isSolved ? \"(Solved)\" : \"\"}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n  \n  const findFirstIndex = (cipherChars, hints) => {\n    for (let i = 0; i < cipherChars.length; i++) {\n      if (!hints[cipherChars[i]]) {\n        return i;\n      }\n    }\n    console.log(\"huge error in findfirstindex() function\")\n    return -1; // Return -1 if all characters are hints\n  };\n  \n  const handleReset = () => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n    setSelectedIndex(findFirstIndex(cipherChars, currentPuzzle.hints));\n    //const selectedIndex = findFirstNonHintIndex();\n    setCurrentState(\n      currentPuzzle.cipher\n        .split('')\n        .map((char) => currentPuzzle.hints[char] || '_')\n        .join('')\n    );\n    setShowSettings(false);\n\n  };\n\n  const handleAbout = () => {\n    setShowAboutBiblegram(true);\n\t\tsetShowSettings(false);\n  };\n\n  const handleAboutClose = () => {\n    setShowAboutBiblegram(false);\n\t\t\n  };\n\t\t\n  \n\n  let puzzle_number = 0\n  if(puzzleData != null)\n  {\n    puzzle_number = puzzleData.current_puzzle;\n  }\n\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.titleBarContainer}>\n        <TitleBar \n          puzzleNumber={puzzle_number}\n          onPuzzlesPress={handlePuzzlesPress} \n          onSettingsPress={handleSettingsPress} />\n      </View>\n      <View>\n        {showPuzzles ? (\n          <PuzzleSelection\n            currentPuzzleId={puzzle_number}\n            puzzles={puzzleData.puzzles}\n            onSelect={(index) => {\n              setCurrentPuzzle(index);\n              //findFirstIndex();\n              setShowPuzzles(false);\n            }}\n          />\n        ) : \n        showSettings ? (\n          <View style={styles.settingsMenu}>\n            <TouchableOpacity style={styles.menuItem} onPress={handleReset}>\n              <Text style={styles.menuItemText}>Reset</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.menuItem} onPress={handleAbout}>\n              <Text style={styles.menuItemText}>About Biblegram</Text>\n            </TouchableOpacity>\n          </View>\n        ) : showAboutBiblegram ? (\n          <AboutBiblegram onClose={handleAboutClose} />\n        ) : (\n          <View style={styles.puzzleContainer}>\n \t\t\t      {renderPuzzle()}\n          </View>\n        )}\n      </View>\n    \n    </SafeAreaView>\n  );\n}\n\nconst AboutBiblegram = ({ onClose }) => (\n  <View style={styles.aboutBiblegram}>\n    <Text style={styles.aboutTitle}>About Biblegram</Text>\n    <Text style={styles.aboutBiblegram}>\n      Biblegram is a cryptogram puzzle game based on Bible verses. Users can solve puzzles by decrypting the encoded text to reveal the original verse.\n    </Text>\n    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n      <Text style={styles.closeButtonText}>Close</Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  /*\n    justifyContent: \"center\",\n    fontWeight: \"italic\",\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  */\n  container: {\n    //fontFamily: 'Verdana',\n    flexDirection: \"column\",\n    //alignSelf: \"stretch\",\n    backgroundColor: '#F5F5F5', // Add this line to set the background color\n  },\n  titleBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#3F51B5',\n    alignItems: 'center',\n    //padding: 15,\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingRight: 10,\n    //paddingHorizontal: 15,\n    //letterSpacing: 7,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    paddingTop: 30,\n    flex:1,\n  },\n  title: {\n    fontFamily: 'cursive',\n    color: 'white',\n    fontSize: 28,\n    fontWeight: 'bold',\n    MarginVertical: 0,\n  },\n  puzzleNumber: {\n    paddingTop: 10,\n    //fontFamily: 'Verdana',\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n    color: 'yellow',\n    fontSize: 12,\n  },\n  settingsMenu: {\n    //Not In Use\n    //fontWeight: \"italic\",\n    //fontFamily: 'Century-Gothic',\n    //backgroundColor: '#E0E0E0',\n    //paddingHorizontal: 15,\n    //paddingBottom: 15,\n  },\n  hints: {\n    alignSelf: \"stretch\",\n    //fontFamily: 'Verdana',\n    //color: colors.lightgrey,\n    fontSize: 15,\n    MarginVertical: 0,\n    justifyContent: \"right\",\n    alignItems: \"right\",\n  },\n  button: {\n    color: colors.lightgrey,\n    padding: 10,\n\t\t//flex: 1,\n    alignSelf: \"stretch\",\n  },\n  buttonText: {\n    paddingTop: 30,\n    fontStyle: \"italic\",\n    //fontFamily: 'Verdana',\n    color: 'white',\n    fontSize: 14,\n    //flex: 2,\n  },\n  menuItem: {\n    paddingLeft:20,\n    //paddingVertical: 10,\n  },\n  menuItemText: {\n    paddingTop:20,\n    //fontFamily: 'Verdana',\n    fontStyle: 'italic',\n    fontSize: 16,\n  },\n  aboutBiblegram: {\n    padding: 20,\n    alignSelf: \"stretch\",\n    flex: 1,\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    //paddingHorizontal: 20,\n  },\n  aboutTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  aboutText: {\n    fontSize: 16,\n    textAlign: 'justify',\n    marginBottom: 30,\n  },\n  closeButton: {\n    backgroundColor: '#3F51B5',\n    width: 70,\n    paddingHorizontal: 5,\n    paddingVertical: 5,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    //fontFamily: 'Verdana',\n    fontSize: 14,\n    color: 'white',\n  },\n  puzzleContainer: {\n    //Not In Use\n    //flex: 4,\n    //justifyContent: 'center',\n    //alignItems: 'center',\n  },\n  hintsContainer: {\n    paddingRight: 25,\n    textAlign: 'right',\n  },\n  keyboardContainer: {\n    padding: 20,\n    //justifyContent: 'center',\n    //alignItems: 'center',\n  },\n  content: {\n    //Not In Use\n    //flex: 1,\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    //fontSize: 18,\n    //color: 'black', // Add this line to set the text color\n  },\n  cipherText: {\n    //Not In Use\n    //fontFamily: 'Century-Gothic',\n    //fontSize: 18,\n    //color: '#333',\n  },\n  inputText: {\n    flexDirection: 'row', \n    flexWrap: 'wrap',\n    padding: 20,\n  },\n  hintText: {\n    fontSize: 12,\n    fontStyle: 'italic',\n    // fontFamily: 'Verdana',\n    color: 'blue',\n    textAlign: 'right',\n  },\n  solvedPuzzle: {\n    padding: 20,\n    //fontFamily: 'Verdana',\n    fontSize: 16,\n    textTransform: 'capitalize',\n  },\n  solvedReference: {\n    paddingRight: 20,\n    paddingBottom: 20,\n    //fontFamily: 'Verdana',\n    fontSize: 12,\n    fontStyle: 'italic',\n    textTransform: 'capitalize',\n    textAlign: 'right'\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [994], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["colors","LEFT","_colorsToEmoji","_defineProperty","CLEAR","keys","keyWidth","Dimensions","width","length","keyHeight","StyleSheet","keyboard","alignSelf","marginTop","row","flexDirection","justifyContent","key","height","margin","borderRadius","backgroundColor","alignItems","keyText","color","fontWeight","fontFamily","fontSize","_ref","_ref$onKeyPressed","onKeyPressed","_ref$greenCaps","greenCaps","_ref$yellowCaps","yellowCaps","_ref$greyCaps","greyCaps","isLongButton","getKeyBGColor","includes","_jsx","View","style","styles","children","map","keyRow","i","Pressable","onPress","disabled","Text","toUpperCase","puzzle_data_structure","current_puzzle","puzzles","ciphersequence","cipher","phrase","topic","book","chapter","verse","isSolved","current_state","hints","start_time","end_time","time_taken","next_puzzle","TitleBar","puzzleNumber","onPuzzlesPress","onSettingsPress","_jsxs","titleBar","TouchableOpacity","button","buttonText","titleContainer","title","App","_useState","useState","_useState2","_slicedToArray","puzzleData","setPuzzleData","_useState3","_useState4","showPuzzles","setShowPuzzles","_useState5","_useState6","showSettings","setShowSettings","_useState7","_useState8","showAboutBiblegram","setShowAboutBiblegram","_useState9","_useState10","currentState","setCurrentState","_useState11","_useState12","selectedIndex","setSelectedIndex","screenWidth","Math","floor","useEffect","loadPuzzleData","currentPuzzle","split","char","join","cipherChars","findFirstIndex","Platform","window","addEventListener","handleKeyDown","removeEventListener","event","toLowerCase","_ref2","_asyncToGenerator","storedData","AsyncStorage","JSON","parse","savePuzzleData","error","console","apply","arguments","_ref3","data","stringify","_x","renderCipherAndCurrentState","duplicateChars","currentStateChars","cipherChar","inputText","index","isHint","isSelected","isSameCipher","isDuplicate","padding","textTransform","selectedCipherChar","nextIndex","newStateJoin","currentChar","checkIfSolved","prevData","updatedPuzzles","_objectSpread","Date","toISOString","newSelectedIndex","setNextNonHintIndex","goToNextPuzzle","log","puzzle_number","SafeAreaView","container","titleBarContainer","_ref4","currentPuzzleId","onSelect","puzzleSelectionContainer","Object","puzzleItem","puzzleItemText","puzzleId","prevPuzzleData","settingsMenu","menuItem","menuItemText","AboutBiblegram","onClose","puzzleContainer","values","duplicates","reduce","acc","push","filter","cipherCharIndexes","Set","size","uniqueChars","_toConsumableArray","solvedPuzzle","solvedReference","Button","mainContainer","hintsContainer","hintText","keyboardContainer","Keyboard","renderPuzzle","_ref5","aboutBiblegram","aboutTitle","closeButton","closeButtonText","paddingTop","paddingBottom","paddingRight","flex","MarginVertical","fontStyle","paddingLeft","marginBottom","aboutText","textAlign","paddingHorizontal","paddingVertical","content","cipherText","flexWrap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}