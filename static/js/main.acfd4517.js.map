{"version":3,"file":"static/js/main.acfd4517.js","mappings":"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","sources":["src/constants.js","src/components/Keyboard/Keyboard.styles.js","src/components/Keyboard/Keyboard.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const colors = {\n  black: \"#121214\",\n  darkgrey: \"#3A3A3D\",\n  grey: \"#818384\",\n  lightgrey: \"#D7DADC\",\n  primary: \"#538D4E\",\n  //secondary: \"#B59F3B\",\n  secondary: \"#B22222\",\n};\n\nexport const colorsToEmoji = {\n  [colors.darkgrey]: \"⬛\",\n  [colors.primary]: \"🟩\",\n  [colors.secondary]: \"🟧\",\n};\n\nexport const LEFT = \"DEL\";\nexport const CLEAR = \"NEXT\";\nexport const NEXT = CLEAR;\n\nexport const keys = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n  [LEFT, \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", CLEAR],\n];\n","import { StyleSheet, Dimensions } from \"react-native\";\nimport { keys, colors } from \"../../constants\";\n\nconst screenWidth = Dimensions.get(\"window\").width;\nexport const keyWidth = (screenWidth - 10) / keys[0].length;\nconst keyHeight = keyWidth * 1;\n\n//const screenHeight = Dimensions.get('window').height;\nconst screenHeight = Dimensions.get('window').height;\nconst YOUR_DESIRED_KEYBOARD_HEIGHT = 550;\nconst keyboardTop = screenHeight - YOUR_DESIRED_KEYBOARD_HEIGHT;\n\nexport default StyleSheet.create({\n  keyboard: {\n    //flexShrink:2,\n    //flexGrow: 1,\n    //alignSelf: \"stretch\",\n    //marginTop: \"auto\",\n    //position: \"relative\"\n    //position: \"absolute\",\n    //marginBottom: 20,\n    //bottom: keyboardTop,\n    //marginTop: \"auto\"\n    //justifyContent: 'space-between',\n  },\n  row: {\n    //alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  key: {\n    width: keyWidth - 5,\n    height: keyHeight - 5,\n    margin: 2,\n    borderRadius: 5,\n    backgroundColor: colors.grey,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  keyText: {\n    color: '#FFFFFF',\n    //color: colors.lightgrey,\n    fontWeight: \"bold\",\n    fontFamily: 'Verdana',\n    fontSize: 22,\n\n  },\n});\n","import { View, Text, Pressable } from \"react-native\";\nimport { keys, LEFT, CLEAR, colors } from \"../../constants\";\nimport styles, { keyWidth } from \"./Keyboard.styles\";\n\nconst Keyboard = ({\n  onKeyPressed = () => {},\n  greenCaps = [],\n  yellowCaps = [],\n  greyCaps = [],\n}) => {\n  const isLongButton = (key) => {\n    return key === LEFT || key === CLEAR;\n  };\n\n  const getKeyBGColor = (key) => {\n    if (greenCaps.includes(key)) {\n      return colors.darkgrey;\n    }\n    if (yellowCaps.includes(key)) {\n      //return \"#FF6347\";\n      return colors.secondary;\n    }\n    if (greyCaps.includes(key)) {\n      return colors.darkgrey;\n    }\n    return colors.grey;\n  };\n\n  return (\n    <View style={styles.keyboard}>\n      {keys.map((keyRow, i) => (\n        <View style={styles.row} key={`row-${i}`}>\n          {keyRow.map((key) => (\n            <Pressable\n              onPress={() => onKeyPressed(key)}\n              disabled={greyCaps.includes(key)}\n              key={key}\n              style={[\n                styles.key,\n                isLongButton(key) ? { width: keyWidth * 1.4 } : {},\n                { backgroundColor: getKeyBGColor(key) },\n              ]}\n            >\n              <Text style={styles.keyText}>{key.toUpperCase()}</Text>\n            </Pressable>\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Keyboard;\n","import { useEffect, useState, useRef } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, SafeAreaView, Button, ScrollView, TouchableOpacity, Alert, Dimensions, Platform } from 'react-native';\nimport { colors, NEXT, LEFT, colorsToEmoji } from \"./src/constants\";\nimport Keyboard from \"./src/components/Keyboard\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Clipboard from \"expo-clipboard\";\nimport { useFonts } from 'expo-font';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\n// import * as SplashScreen from 'expo-splash-screen';\n\n\n// “So whether you eat or drink or whatever you do, do it all for the glory of God.”\n// 1 corinthian 10:31 ni\n\n// “just as the Son of Man did not come to be served, but to serve, and to give his life as a ransom for many.””\n// matthew 20:28 niv\n\nconst puzzle_data_structure = {\n  current_puzzle: 1,\n  puzzles: {\n    1: {\n      ciphersequence: \"hqjuibmswaynpreovtfdczxlgk\",\n      cipher: 'bet meu fe neziu dsi xetnu.',\n      phrase: 'for god so loved the world.',\n      topic: 'Love',\n      book: 'John',\n      chapter: \"3\",\n      verse: \"16\",\n      isSolved: false,\n      current_state: '',\n      hints: { 'e': 'o', 'u': 'd', ' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 2, // The ID of the next puzzle\n    },\n    2: {\n      ciphersequence: \"hqjuibmswaynpreovtfdczxlgk\",\n      cipher: 'nid hnn dshd gec ue qi ueri wr nezi.',\n      phrase: 'let all that you do be done in love.',\n      topic: 'Love',\n      book: '1 Corinthians',\n      chapter: \"16\",\n      verse: \"14\",\n      isSolved: false,\n      current_state: '',\n      hints: { 'n': 'l', 'r': 'n', ' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 3, // The ID of the next puzzle\n    },\n    // Add more puzzles here\n\n    3: {\n      ciphersequence: \"hqjuibmswaynpreovtfdczxlgk\",\n      cipher: 'ue redswrm btep finbwfs hpqwdwer et jerjiwd, qcd wr scpwnwdg jecrd edsitf peti fwmrwbwjhrd dshr gectfinzif.',\n      phrase: 'do nothing from selfish ambition or conceit, but in humility count others more significant than yourselves.',\n      topic: 'Humility',\n      book: 'Philippians 2',\n      chapter: \"2\",\n      verse: \"3\",\n      isSolved: false,\n      current_state: '',\n      hints: { 'r': 'n', 'm': 'g', 'f': 's', 'w': 'i', ' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 4, // The ID of the next puzzle\n    },\n    4: {\n      ciphersequence: \"'mwtohslqrcyinkdjfpuvagebxz'\",\n      cipher: 'wh yrko mko tdnjmuurdkmvh vd dkh mkdvqhp, sdplrgrkl hmtq dvqhp, cauv mu rk tqpruv ldo sdplmgh xda.',\n      phrase: 'be kind and compassionate to one another, forgiving each other, just as in christ god forgave you.',\n      topic: 'kindness',\n      book: 'Ephesians',\n      chapter: \"4\",\n      verse: \"32\",\n      isSolved: false,\n      current_state: '',\n      hints: {'o': 'd', 'y': 'k', 'r': 'i', 'u': 's', 't': 'c', 'g': 'v', 'd': 'o',' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 5, // The ID of the next puzzle\n    },\n    5: {\n      //// “So whether you eat or drink or whatever you do, do it all for the glory of God.”\n      // 1 corinthian 10:31 niv\n      ciphersequence: \"knrwyshjaecbpqmiutoxfzldvg\",\n      cipher: 'om ljyxjyt vmf ykx mt wtaqc mt ljkxyzyt vmf wm, wm ax kbb smt xjy hbmtv ms hmw.',\n      phrase: 'so whether you eat or drink or whatever you do, do it all for the glory of god.',\n      topic: 'Glorifying God',\n      book: '1 Corinthians',\n      chapter: \"10\",\n      verse: \"31\",\n      isSolved: false,\n      current_state: '',\n      hints: {'o': 's', 'y': 'e', 'c':'k',' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 1, // The ID of the next puzzle\n    },\n\n    6: {\n      // trust in the lord with all your heart and lean not on your own understanding\n      ciphersequence: \"hqmeraygjiudskntpoxcfwlvbz\",\n      cipher: 'cofxc jk cgr dnoe ljcg hdd bnfo grhoc hke drhk knc nk bnfo nlk fkeroxchkejky.',\n      phrase: 'trust in the lord with all your heart and lean not on your own understanding.',\n      topic: 'trust',\n      book: 'Proverbs',\n      chapter: \"3\",\n      verse: \"5\",\n      isSolved: false,\n      current_state: '',\n      hints: {'f': 'u', 'n': 'o', 'h':'a', 'c':'t', 'e':'d', ' ':' ', '!': '!', '.': '.', ',':',' ,}, // Key-value pairs for the given hints\n      start_time: null, // The timestamp when the user started the puzzle\n      end_time: null, // The timestamp when the user solved the puzzle\n      time_taken: null, // The time taken by the user to solve the puzzle (in seconds)\n      next_puzzle: 1, // The ID of the next puzzle\n    },\n\n    // Add more puzzles here\n  \n}};\n\n\n\n\n\nconst copyArray = (arr) => {\n  return [...arr.map((rows) => [...rows])];\n};\n\nconst TitleBar = ({ puzzleNumber, onPuzzlesPress, onSettingsPress }) => (\n  <View style={styles.titleBar}>\n    <TouchableOpacity style={styles.button} onPress={onPuzzlesPress}>\n      <Text style={styles.buttonText}> Puzzle #{puzzleNumber}</Text>\n    </TouchableOpacity>\n \n    <View style={styles.titleContainer}>\n      <Text style={styles.title}>Biblegram</Text>\n    </View>\n\n    <TouchableOpacity style={styles.button} onPress={onSettingsPress}>\n      <Text style={styles.buttonText}>Settings</Text>\n    </TouchableOpacity>\n   \n  </View>\n);\n\n\n\nexport default function App() {\n\n\tconst [puzzleData, setPuzzleData] = useState(null);\n\n  const [showPuzzles, setShowPuzzles] = useState(false);\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [showAboutBiblegram, setShowAboutBiblegram] = useState(false);\n\n\tconst [currentState, setCurrentState] = useState('');\n\tconst [selectedIndex, setSelectedIndex] = useState(0);\n\n  const [showConfetti, setShowConfetti] = useState(false);\n  \n  \n  const screenWidth = Dimensions.get('window').width;\n  const fontSize = 32; // Set the font size of the text here\n  const characterWidth = fontSize * 0.6; // A rough estimate for character width; adjust as needed\n  const charactersPerLine = Math.floor(screenWidth / characterWidth); \n  \n  const punctuations = [\",\", \" \", \"'\", \"!\", \".\"];\n\n  function getStartIndices(sentence, segments) {\n    let start = 0;\n    const result = [];\n  \n    for (let segment of segments) {\n      result.push(start);\n      start += segment.length;\n    }\n  \n    return result;\n  }\n\n\n  const splitIntoWords = (text, maxLineLength) => {\n    const words = text.split(\" \");\n    const lines = [];\n\n    let currentLine = words[0];\n    \n  \n    for (let i = 1; i < words.length; i++) {\n      //console.log(words[i].length + \" \" + words[i] + \" \" );\n      \n      if (currentLine.length + words[i].length <= maxLineLength) {\n        currentLine += \" \" + words[i];\n      } else {\n        currentLine += \" \";\n        lines.push(currentLine);\n        currentLine = words[i];\n      }\n    }\n\n    lines.push(currentLine); // add the last line\n\n    return lines;\n  };\n  \n  const findNthWordIndex = (str, n) => {\n    // Split the string into an array of words\n    const words = str.split(' ');\n  \n    // Get the nth word\n    const nthWord = words[n - 1];\n  \n    // Find the index of the nth word in the original string\n    const index = str.indexOf(nthWord);\n  \n    return index;\n  }\n  \n\n  const findFirstNonHintIndex = () => {\n    \n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n  \n    for (let i = 0; i < cipherChars.length; i++) {\n      if (!currentPuzzle.hints[cipherChars[i]]) {\n        return i;\n      }\n    }\n  \n    return null;\n  };\n\n  //const onKeyPressedRef = useRef();\n\n  \n  useEffect(() => {\n    loadPuzzleData();\n  }, []);\n\n\n  \n\n\tuseEffect(() => {\n  \tif (puzzleData) {\n    \tconst currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    \tsetCurrentState(\n      \tcurrentPuzzle.cipher\n        \t.split('')\n        \t.map((char) => currentPuzzle.hints[char] || '_')\n        \t.join('')\n    \t);\n      const cipherChars = currentPuzzle.cipher.split('');\n      setSelectedIndex(findFirstIndex(cipherChars, currentPuzzle.hints));\n  \t}\n\t}, [puzzleData]);\n\n\n\n  useEffect(() => {\n    if (Platform.OS === 'web')\n    {\n      window.addEventListener('keydown', handleKeyDown);\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [puzzleData, currentState, selectedIndex]);\n  \n\n\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  const handleKeyDown = (event) => {\n    \n    const key = event.key.toLowerCase();\n    if (alphabet.includes(key) || key === 'backspace' ||\n      key === ' ' || key === \"arrowleft\" || key === \"arrowright\") {\n        //console.log(key)\n        \n        onKeyPressed(key);\n      //onKeyPressedRef.current(key);\n    }\n  };\n  \n\n\tconst updateCurrentState = (newChar) => {\n    //console.log(\"hi\");\n  \tconst currentStateChars = currentState.split('');\n  \tif (!currentPuzzle.hints[currentPuzzle.cipher[selectedIndex]]) {\n    \tcurrentStateChars[selectedIndex] = newChar;\n    \tsetCurrentState(currentStateChars.join(''));\n  \t}\n\t};\n\n  const loadPuzzleData = async () => {\n    try {\n      const storedData = await AsyncStorage.getItem(\"puzzleData\");\n      if (storedData) {\n        setPuzzleData(JSON.parse(storedData));\n      } else {\n        setPuzzleData(puzzle_data_structure);\n        savePuzzleData(puzzle_data_structure);\n      }\n    } catch (error) {\n      console.error(\"Error loading puzzle data:\", error);\n    }\n  };\n  \n\n  const savePuzzleData = async (data) => {\n    try {\n      await AsyncStorage.setItem(\"puzzleData\", JSON.stringify(data));\n    } catch (error) {\n      console.error(\"Error saving puzzle data:\", error);\n    }\n  };\n\n  \n  const setNextNonHintIndex = (index) => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n    let nextIndex = index;\n   \n    \n    if(currentState.includes(\"_\")){\n      do {\n        nextIndex = (nextIndex + 1) % cipherChars.length;\n      } //while (currentPuzzle.hints[cipherChars[nextIndex]] && currentState[nextIndex != \"_\"]);\n      while (currentState[nextIndex] != \"_\");\n      //console.log(nextIndex);\n      setSelectedIndex(nextIndex);\n    }\n  };\n\n  function checkIfSolved(currentState, currentPuzzle) {\n    return currentState === currentPuzzle.phrase;\n  }\n  \n\n\n\n  const renderCipherAndCurrentState = (duplicateChars) => {\n  \tconst currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n  \tconst cipherChars = currentPuzzle.cipher.split('');\n  \tconst currentStateChars = currentState.split('');\n\n\n\n    //console.log(currentStateChars);\n\n    let cipherChar = currentPuzzle.cipher[selectedIndex];\n    let currentStateChar = currentState[selectedIndex];\n\n\n \n    if (!!currentPuzzle.hints[cipherChar]  && selectedIndex < cipherChars.length)\n    {\n        setSelectedIndex(selectedIndex+1); \n    } \n    //{renderCipherAndCurrentState(duplicateChars)}\n    \n\n\n\n    // hardcode 20230614\n    let charsPerLine = 15;\n    const cipherSegments = splitIntoWords(currentPuzzle.cipher, charsPerLine);\n    const segmentIndexes = getStartIndices(cipherChar, cipherSegments)\n    //[0, 16, 36, 52, 67, 79, 96]  \n    let charCounter = -1;\n    // TODO: assert charcounter is <= tex.length\n    // 'bet meu fe neziu dsi xetnu'\n    return (\n      // column of views (aka. sentences)\n      <View style={styles.puzzleScrollViewViewColumn}>\n        {cipherSegments.map((segment, segmentIndex) => {\n\n          \n          return (\n            // rows of alphabets\n            <View style={styles.puzzleScrollViewViewRow} key={segment+segmentIndex}>\n              {segment.split('').map((char, charIndex) => {\n                \n                charCounter += 1;\n                const index = charCounter;  \n                const isSelected = index === selectedIndex;\n\n                const isHint = currentPuzzle.hints[char];\n                const isSameCipher = selectedIndex !== null && currentPuzzle.cipher[selectedIndex] === char;\n\n                const isDuplicate = duplicateChars.includes(currentStateChars[index]);\n                const isPunctuation = punctuations.includes(currentStateChars[index]);\n\n\n                const hintSpace = (char === ' ') && isHint\n                const additionalMargin = hintSpace ? 5 : 0;\n  \n                return (\n                  <View style={styles.puzzleScrollViewCharSet}>\n                    <TouchableOpacity\n                      key={index}\n                      onPress={() => {\n                        if (!isHint) {\n                          setSelectedIndex(index);\n                        }\n                      }}\n                    >\n                      <View\n                        style={{\n            \n                          alignItems: 'center',\n                          justifyContent: \"center\",\n                       \n                        }}\n                      >\n                        \n                        <Text\n                       \n                          style={{\n                            fontFamily: 'Verdana',\n                            textTransform: 'uppercase',\n                            fontSize: 18,\n                            //color: isHint ? 'normal' : 'normal',\n                            //fontWeight: isHint ? 'normal' : 'normal',\n                            //marginLeft: additionalMargin,\n                            //padding: additionalMargin,\n                            backgroundColor: isSelected\n                            ? 'transparent' : isSameCipher\n                            ? 'transparent' : 'transparent',\n                            \n                            marginBottom: -35,\n                            fontweight: \"bold\",\n                            height: isPunctuation ? \n                              40: 22,\n                            marginLeft: isPunctuation ?\n                              -10: 0,\n                          }}\n                        >\n                         \n                          {currentStateChars[index] === \"_\" ? \" \" : currentStateChars[index]}\n                        </Text>\n\n                        {!isHint ? \n                          (\n                            <Text\n                              style={{\n                                color: isDuplicate ? '#EE4B2B' : 'black',\n                                //letterSpacing: 1,\n                                //paddingBottom: 5,\n                                fontSize: 35,\n                             \n                                backgroundColor: isSelected\n                                ? 'purple' : isSameCipher\n                                ? 'purple' : 'transparent',\n                                opacity: 0.42,\n                                //fontWeight: \"bold\",\n                                height: 39,\n                                borderBottomWidth: isSelected ? \n                                8: 1,\n                                fontWeight: isSelected ? \n                                \"bold\" : \"normal\",\n                                //marginBottom: -45,\n                                \n                              }}\n                            >\n                            _\n                            </Text>\n                          ) : \n                          (punctuations.includes(currentStateChars[index])) ? \n                            (console.log(\"TODO: forgot why I did this..\")) : \n                            (\n                              <Text\n                                style={{\n                                  color: 'grey',\n                                  fontSize: 35,\n                                  height: 30,\n                                  \n                                  //fontWeight: \"bold\",\n                                  backgroundColor: isSelected\n                                  ? 'cyan' : isSameCipher\n                                  ? 'cyan' : 'transparent',\n                                  //letterSpacing: 1,                          \n                                }}>\n                                _\n                              </Text>\n                            )\n                        }\n\n                        {!isHint && \n                          <Text style={{\n                            fontFamily: 'Verdana',\n                            //fontWeight: 'bold',\n                            textTransform: 'uppercase',\n                            fontSize: 15,\n                            height: 9,\n                            backgroundColor: isSelected\n                            ? 'transparent' : isSameCipher\n                            ? 'transparent' : 'transparent',\n                            color: \"gray\",\n                            marginTop: 0,\n                            marginBottom: -18,\n                            //fontWeight: \"bold\",\n                          }}>\n                            {char}\n                          </Text>\n                        }\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n            </View>\n          );\n        \n       \n        })}\n      </View>\n    );\n      \n\t};\n\n\n  const isHint = (index) => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChar = currentPuzzle.cipher[index];\n    return !!currentPuzzle.hints[cipherChar];\n  };\n\n  const setPuzzleAsSolved = (puzzleId) => {\n    setPuzzleData((prevPuzzleData) => {\n      const updatedPuzzles = { ...prevPuzzleData.puzzles };\n      updatedPuzzles[puzzleId].isSolved = true;\n      return { ...prevPuzzleData, puzzles: updatedPuzzles };\n    });\n  };\n\n  const setCurrentPuzzle = (puzzleId) => {\n    setPuzzleData((prevPuzzleData) => {\n      return { ...prevPuzzleData, current_puzzle: puzzleId };\n    });\n  };\n  \n  //added by A\n  const checkIfPuzzleSolved = () => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    if (currentState === currentPuzzle.phrase) {\n      // Update the puzzleData without affecting the current_state\n      setPuzzleData((prevData) => {\n        const updatedPuzzles = {\n          ...prevData.puzzles,\n          [prevData.current_puzzle]: {\n            ...prevData.puzzles[prevData.current_puzzle],\n            isSolved: true,\n            end_time: new Date().toISOString(),\n          },\n        };\n        return { ...prevData, puzzles: updatedPuzzles };\n      });\n    }\n  };\n\n  //end of add\n  \n\n  const onKeyPressed = (key) => {\n\n    \n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n    const selectedCipherChar = cipherChars[selectedIndex];\n    // if game is already over\n    if(currentPuzzle.isSolved)\n    {\n      return;\n    }\n\n    let nextIndex = selectedIndex;\n    if(key == \"arrowright\" || key == \" \")\n    {\n      nextIndex = (nextIndex + 1) % cipherChars.length;\n      setSelectedIndex(nextIndex);\n      return;\n    }\n    if(key == \"arrowleft\" || key == LEFT)\n    {\n      if(selectedIndex == 0)\n      {\n        const maxIndex = cipherChars.length -1 ;\n        for (let i = maxIndex; i >= 0; i--)\n        { \n          if (!isHint(i))\n          {\n            setSelectedIndex(i);\n            break;\n          }\n        }\n      }\n      key = LEFT;\n    }\n    if(key == \"backspace\")\n    {\n      //key = CLEAR\n      // TODO: revamp code. we want a pass here.  \n\n    }\n \n\n    \n    const newState = currentState.split('').map((currentChar, index) => {\n\n      if (cipherChars[index] === selectedCipherChar && !isHint(index)) {\n        if (key === NEXT)\n        {\n          //return \"_\";\n          return currentChar;\n        } \n        else if (key === LEFT) \n        {\n          return \"_\";\n\n          //return currentChar;\n        }\n        return key;\n      }\n     \n      return currentChar;\n    });\n\n    \n    //console.log(newState);\n    const newStateJoin = newState.join('');\n    setCurrentState(newStateJoin);\n  \n\n \n      // Check if the puzzle is solved\n    if (checkIfSolved(newStateJoin, currentPuzzle)) {\n      //console.log(\"is solved \");\n      setPuzzleData((prevData) => {\n        const updatedPuzzles = {\n          ...prevData.puzzles,\n          [prevData.current_puzzle]: {\n            ...prevData.puzzles[prevData.current_puzzle],\n            isSolved: true,\n            end_time: new Date().toISOString(),\n          },\n        };\n        return { ...prevData, puzzles: updatedPuzzles };\n\n      });\n      //alert('Puzzle solved!');\n      setShowConfetti(true)\n      setTimeout(() => {\n      setShowConfetti(false); }, 20000)\n    // You can add additional logic here, e.g., updating the puzzle data, moving to the next puzzle, etc.\n    }\n    if (key === LEFT) {\n      // Move the selected index back a space if it is in bounds and not a hint\n      let newSelectedIndex = selectedIndex - 1;\n      // if current_cipher is a hint that user cannot edit \n      //    decrement again\n      while (newSelectedIndex >= 0 && currentPuzzle.hints[currentPuzzle.cipher[newSelectedIndex]]) {\n        newSelectedIndex--;\n  \n\n      } \n      if (newSelectedIndex >= 0) {\n\n        //let newLeftString = currentState;\n     \n        setSelectedIndex(newSelectedIndex);\n\n      }\n    } \n    else\n    {\n      setNextNonHintIndex(selectedIndex);\n    }\n\n  } \n\n  const goToNextPuzzle = () => {\n    setPuzzleData((prevData) => {\n      return { ...prevData, current_puzzle: prevData.puzzles[puzzleData.current_puzzle].next_puzzle };\n    });\n  };\n\n\n  const renderPuzzle = () => {\n    if (!puzzleData) return null;\n\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const currentStateChars = currentState.split('');\n    const greyCaps = Object.values(currentPuzzle.hints);\n\n    const duplicates = currentStateChars.reduce((acc, char, index) => {\n      if (!greyCaps.includes(char)) {\n        if (acc[char]) {\n          acc[char].push(index);\n        } else {\n          acc[char] = [index];\n        }\n      }\n      return acc;\n    }, {});\n    \n    const duplicateChars = Object.keys(duplicates).filter(\n      (char) => {\n        const cipherCharIndexes = duplicates[char];\n        const uniqueCipherChars = new Set(cipherCharIndexes.map(index => currentPuzzle.cipher[index]));\n        return uniqueCipherChars.size > 1;\n      }\n    ).filter(char => char != '_');\n    \n    const uniqueChars = [...new Set(currentState)].filter(\n      (char) => !greyCaps.includes(char) && !duplicateChars.includes(char)\n    );\n\n  \n    return (\n      <View style={styles.container}>\n        {currentPuzzle.isSolved ? (\n   \n       \n          <View style={styles.solvedContainer}>\n        \n         \n\n\n            <Text style={styles.solvedPuzzle}>{currentPuzzle.phrase}</Text>\n            <Text style={styles.solvedReference}>- {currentPuzzle.book} {currentPuzzle.chapter}:{currentPuzzle.verse}</Text>\n            <View style={[{ width: \"98%\", margin:10, alignItems:'center' }]}><Button title=\"Go to Next Puzzle\" onPress={goToNextPuzzle} /></View>\n            {showConfetti && (\n              <ConfettiCannon\n                count={100}\n                origin={{ x: 0, y: 0 }}\n                fadeOut={true}\n                explosionSpeed={0}\n                fallSpeed={3000}\n              />\n            )}\n          </View>\n          \n        ) : (\n          <View style={styles.mainContainer}>\n            <View style={styles.puzzleScrollView}>\n              <ScrollView style={styles.puzzleScrollViewView}>\n\n                {\n    \n                renderCipherAndCurrentState(duplicateChars)\n                }\n              </ScrollView>\n            </View>\n\n            <View style={styles.hintsContainer}>\n              <Text style={styles.hintText}> {currentPuzzle.book}</Text>\n              <Text style={styles.hintText}> \"{currentPuzzle.topic}\"</Text>\n            </View>\n            \n            <View style={styles.keyboardContainer}>  \n                <Keyboard\n                onKeyPressed={onKeyPressed} \n                greyCaps={greyCaps}\n                yellowCaps={duplicateChars}\n                greenCaps={uniqueChars} \n                />\n            </View>\n          \n        \n          </View>\n          \n        )}\n \n      </View>\n    );\n\n  };\n\n  let renderCipherAndCurrentStateStub = (duplicateChars) => {\n \n    return renderCipherAndCurrentState(duplicateChars)\n  }\n\n  const handlePuzzlesPress = () => {\n    setShowSettings(false);\n    setShowAboutBiblegram(false);\n    setShowPuzzles(!showPuzzles);\n  };\n\n  const handleSettingsPress = () => {\n    setShowPuzzles(false);\n    setShowAboutBiblegram(false);\n    setShowSettings(!showSettings);\n  };\n\n\n  const PuzzleSelection = ({ currentPuzzleId, puzzles, onSelect }) => {\n    return (\n      <View> \n        {Object.keys(puzzles).map((key) => (\n          <TouchableOpacity\n            key={key}\n            style={styles.puzzleMenuItem}\n            onPress={() => {\n        \n              if (key !== currentPuzzleId) {\n                onSelect(key);\n              }\n              else\n              {\n                setShowPuzzles(false);\n              }\n            }}\n          >\n            <Text >\n              Puzzle {key} {puzzles[key].isSolved ? \"(Solved)\" : \"\"}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n  \n  const findFirstIndex = (cipherChars, hints) => {\n    for (let i = 0; i < cipherChars.length; i++) {\n      if (!hints[cipherChars[i]]) {\n        return i;\n      }\n    }\n    console.log(\"huge error in findfirstindex() function\")\n    return -1; // Return -1 if all characters are hints\n  };\n  \n  const handleReset = () => {\n    const currentPuzzle = puzzleData.puzzles[puzzleData.current_puzzle];\n    const cipherChars = currentPuzzle.cipher.split('');\n    setSelectedIndex(findFirstIndex(cipherChars, currentPuzzle.hints));\n    //const selectedIndex = findFirstNonHintIndex();\n    setCurrentState(\n      currentPuzzle.cipher\n        .split('')\n        .map((char) => currentPuzzle.hints[char] || '_')\n        .join('')\n    );\n    setShowSettings(false);\n\n  };\n\n  const handleAbout = () => {\n    setShowAboutBiblegram(true);\n\t\tsetShowSettings(false);\n  };\n\n  const handleAboutClose = () => {\n    setShowAboutBiblegram(false);\n\t\t\n  };\n\t\t\n  \n\n  let puzzle_number = 0\n  if(puzzleData != null)\n  {\n    puzzle_number = puzzleData.current_puzzle;\n  }\n\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.titleBarContainer}>\n        <TitleBar \n          puzzleNumber={puzzle_number}\n          onPuzzlesPress={handlePuzzlesPress} \n          onSettingsPress={handleSettingsPress} />\n      </View>\n      <View style={styles.notTitleBarContainer}>\n        {showPuzzles ? (\n          <PuzzleSelection \n            currentPuzzleId={puzzle_number}\n            puzzles={puzzleData.puzzles}\n            onSelect={(index) => {\n              setCurrentPuzzle(index);\n              //findFirstIndex();\n              setShowPuzzles(false);\n            }}\n          />\n        ) : \n        showSettings ? (\n          <View style={styles.settingsMenu}>\n            <TouchableOpacity onPress={handleReset}>\n              <Text style={styles.menuItemText}>Reset current puzzle</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={handleAbout}>\n              <Text style={styles.menuItemText}>About Biblegram</Text>\n            </TouchableOpacity>\n          </View>\n        ) : showAboutBiblegram ? (\n          <AboutBiblegram onClose={handleAboutClose} />\n        ) : (\n          <View style={styles.puzzleContainer}>\n \t\t\t      {renderPuzzle()}\n          </View>\n        )}\n      </View>\n    \n    </SafeAreaView>\n  );\n}\n\nconst AboutBiblegram = ({ onClose }) => (\n  <View style={styles.aboutBiblegram}>\n    <Text style={styles.aboutTitle}>About Biblegram</Text>\n    <Text style={styles.aboutBiblegram}>\n      Biblegram is a cryptogram puzzle game based on Bible verses. Users can solve puzzles by decrypting the encoded text to reveal the original verse.\n    </Text>\n    <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n      <Text style={styles.closeButtonText}>Close</Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n\n  container: {\n    fontFamily: 'Verdana',\n    //width: '100%',\n    fontSize: 18,\n    fontFamily: 'Verdana',\n    //height: \"100%\",\n    flex: 1,\n\n    //flex: 1,\n    //alignSelf: \"stretch\",\n    //alignSelf: \"stretch\",\n    //alignItems: \"center\",\n    //alignItems: \"center\", \n    //flexDirection: \"column\",\n    //alignItems: \"center\",\n    //alignSelf: \"stretch\",\n    backgroundColor: '#F5F5F5', // Add this line to set the background color\n  },\n  solvedContainer:\n  {\n    flex : 1,\n    fontSize: 18,\n    fontFamily: 'Verdana',\n  },\n  mainContainer: \n  {\n    flex: 1,\n  },\n  mainPuzzleContainer: {\n    //flexDirection: \"column\",\n    //flexDirection: \"row\",\n    //alignSelf: \"stretch\",\n    //justifyContent: 'space-between',\n    justifyContent: 'flex-end',\n    flex: 7,\n  },\n\n  puzzleScrollView:\n  {\n  \n    name: \"Iampuzzlescrollview\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    flex: 0.9,\n    flexGrow: 3,\n    //maxWidth: \"%\",\n    padding: \"3%\",\n    //alignItems: \"center\",\n    //flexShrink: 2,\n    //flexGrow: 1,\n    //flexDirection: \"column\",\n    //textAlign: 'center',\n    //alignSelf: \"stretch\",\n    //flexShrink: 0.2,\n    //flexBasis: \"auto\",\n    //flexDirection: \"column\",\n    //justifyContent: 'center',\n    //flexShrink: 0,\n    //flex: 1,\n    //flexGrow:1,\n  },\n  puzzleScrollViewView:\n  {\n    flexDirection: \"column\",\n    flex: 1,\n    name: \"Iampuzzlescrollviewview\",\n  },\n  puzzleScrollViewCharSet: \n  {\n    //flex: 1,\n    //flexDirection: \"column\",\n    name: \"IampuzzleScrollViewCharSet\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 22,\n  },\n  puzzleScrollViewViewRow: \n  {\n    paddingTop: 8,\n    paddingLeft: 10,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"left\",\n    name: \"Iampuzzlescrollviewviewrow\",\n    marginBottom: 60,\n  },\n  puzzleScrollViewViewColumn: \n  {\n    flex: 1,\n    name: \"IampuzzlescrollviewviewColumn\",\n    flexDirection: \"column\",\n  },\n  hintsContainer: {\n    //justifyContent: 'space-between',\n    //alignSelf: \"stretch\",\n    //marginVertical: 20,\n    //flex: 0.1,\n    //flexGrow:1,\n    \n\n\n    flexGrow: 0.4,\n    flexShrink: 2,\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    //marginBottom:30,\n    justifyContent: 'center',\n    //fontSize: 24,\n    //paddingRight: 25,\n    //flexGrow: 1,\n    //flex: 2,\n    //justifyContent: 'space-between',\n    name: \"hintscontainer\",\n    //textAlign: 'center',\n    //marginTop: \"auto\",\n    textAlign: 'right',\n  },\n  insideMainContainerBottom: {\n    //flex: 1,\n  },\n  cipherText: {\n    //Not In Use\n    //fontFamily: 'Century-Gothic',\n    //fontSize: 18,\n    //color: '#333',\n\n\n  },\n  inputText: {\n    flexDirection: 'row', \n    //flex: 1,\n    flexWrap: 'wrap',\n    //alignSelf: \"stretch\",\n    //alignItems: 'center',\n    //padding: 15,\n  },\n\n  notTitleBarContainer: {\n    flex: 9,\n  },\n  titleBarContainer: {\n    flex: 1,\n  },\n  titleBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#3F51B5',\n    alignSelf: \"stretch\",\n    alignItems: 'center',\n    //padding: 15,\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingRight: 10,\n    //alignItems: 'center',\n    //paddingTop: 30,\n    //flex: 1,\n    //paddingHorizontal: 15,\n    //letterSpacing: 7,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    //paddingTop: 30,\n    //flex:1,\n  },\n  title: {\n    fontFamily: 'cursive',\n    color: 'white',\n    fontSize: 33,\n    fontWeight: 'bold',\n\n    MarginVertical: 0,\n    justifyContent: \"center\",\n  },\n  puzzleNumber: {\n    \n    paddingTop: 10,\n    fontFamily: 'Verdana',\n    //fontStyle: 'italic',\n    //fontWeight: 'bold',\n    color: 'white',\n    //fontSize: 15,\n    justifyContent: \"center\",\n    //marginLeft: 20,\n\n  },\n\n  hints: {\n    fontWeight: 'bold',\n    alignSelf: \"stretch\",\n    fontFamily: 'Verdana',\n    //color: colors.lightgrey,\n    fontSize: 15,\n    MarginVertical: 0,\n    flexDirection: \"row\",\n    justifyContent: \"right\",\n    alignItems: \"right\",\n  },\n  button: {\n    color: colors.lightgrey,\n    padding: 10,\n    justifyContent: \"center\",\n    //MarginVertical: 0,\n    fontWeight: 'bold',\n    fontSize: 28,\n\t\t//flex: 1,\n    \n  },\n  buttonText: {\n    justifyContent: \"center\",\n    fontWeight: 'bold',\n    //paddingTop: 30,\n    //fontStyle: \"italic\",\n    fontFamily: 'system-ui',\n    color: 'white',\n    fontSize: 16,\n    //flex: 2,\n  },\n  puzzleMenuItem: {\n    flexDirection: 'row', \n    justifyContent: 'left',\n    textAlign: 'right',\n    padding: 10,\n    fontSize: 20,\n    paddingTop:20,\n    paddingLeft:20,\n    //textAlign: 'left',\n    fontFamily: 'Verdana',\n    paddingBottom: 15,\n    borderBottomWidth: 1, // This is the thickness of the border.\n    borderBottomColor: '#3F51B5', // This sets the color of the border.\n  },\n\n  menuItemText: {\n    padding: 10,\n    flexDirection: 'row', \n    justifyContent: 'right',\n    paddingTop:20,\n    paddingRight:20,\n    textAlign: 'right',\n    fontFamily: 'Verdana',\n    //fontStyle: 'italic',\n    fontSize: 20,\n    paddingBottom: 15,\n    borderBottomWidth: 1, // This is the thickness of the border.\n    borderBottomColor: '#3F51B5',\n  },\n  aboutBiblegram: {\n    padding: 20,\n    alignSelf: \"stretch\",\n    flex: 1,\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    //paddingHorizontal: 20,\n  },\n  aboutTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  aboutText: {\n    fontSize: 16,\n    textAlign: 'justify',\n    marginBottom: 30,\n  },\n  closeButton: {\n    backgroundColor: '#3F51B5',\n    width: 70,\n    paddingHorizontal: 5,\n    paddingVertical: 5,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    fontFamily: 'Verdana',\n    fontSize: 14,\n    color: 'white',\n  },\n  puzzleContainer: {\n    flex: 1,\n  },\n\n\n\n  hintText: {\n    fontSize: 20,\n    paddingRight: 20,\n    fontStyle: 'italic',\n    //fontFamily: 'Verdana',\n    color: 'blue',\n    textAlign: 'left',\n    \n  },\n  solvedPuzzle: {\n    //padding: 20,\n    fontFamily: 'Verdana',\n    fontSize: 30,\n    textTransform: 'capitalize',\n    textAlign: \"center\",\n  },\n  solvedReference: {\n    paddingTop: 30,\n    paddingRight: 20,\n    paddingBottom: 20,\n    //fontFamily: 'Verdana',\n    fontSize: 20,\n    fontStyle: 'italic',\n    //textTransform: 'capitalize',\n    textAlign: 'center'\n  },\n  keyboardContainer: {\n    //flex:2,\n    //alignSelf: \"end\",\n    //flexGrow: 0.9,    \n    flexShrink: 2,\n    marginBottom: 50,\n    //display: \"flex\",\n    //align: \"bottom\",\n    //alignSelf: \"stretch\",\n    //marginTop: \"auto\" \n\n    //justifyContent: 'space-between',\n    //alignItems: 'bottom',\n    //marginTop: 800,\n    //alignSelf: \"center\",\n    //flex: 5,\n    //flexShrink:1,\n    //marginTop: 30,\n    //marginBottom: 30,\n    //position:\"absolute\",\n    //bottom:0,\n    //flexGrow:1,\n    //justifyContent: 'flex-end',\n  },\n  keyBoardContainerTop:\n  {\n    //flex: 0.05,\n \n\n   \n    \n  },\n\n});\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [281], () => (__webpack_require__(9599)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["colors","LEFT","_colorsToEmoji","_defineProperty","CLEAR","NEXT","keys","keyWidth","Dimensions","width","length","keyHeight","height","StyleSheet","keyboard","row","flexDirection","justifyContent","key","margin","borderRadius","backgroundColor","alignItems","keyText","color","fontWeight","fontFamily","fontSize","_ref","_ref$onKeyPressed","onKeyPressed","_ref$greenCaps","greenCaps","_ref$yellowCaps","yellowCaps","_ref$greyCaps","greyCaps","isLongButton","getKeyBGColor","includes","_jsx","View","style","styles","children","map","keyRow","i","Pressable","onPress","disabled","Text","toUpperCase","puzzle_data_structure","current_puzzle","puzzles","ciphersequence","cipher","phrase","topic","book","chapter","verse","isSolved","current_state","hints","start_time","end_time","time_taken","next_puzzle","TitleBar","puzzleNumber","onPuzzlesPress","onSettingsPress","_jsxs","titleBar","TouchableOpacity","button","buttonText","titleContainer","title","App","_useState","useState","_useState2","_slicedToArray","puzzleData","setPuzzleData","_useState3","_useState4","showPuzzles","setShowPuzzles","_useState5","_useState6","showSettings","setShowSettings","_useState7","_useState8","showAboutBiblegram","setShowAboutBiblegram","_useState9","_useState10","currentState","setCurrentState","_useState11","_useState12","selectedIndex","setSelectedIndex","_useState13","_useState14","showConfetti","setShowConfetti","screenWidth","punctuations","Math","floor","useEffect","loadPuzzleData","currentPuzzle","split","char","join","cipherChars","findFirstIndex","Platform","window","addEventListener","handleKeyDown","removeEventListener","event","toLowerCase","_ref2","_asyncToGenerator","storedData","AsyncStorage","JSON","parse","savePuzzleData","error","console","apply","arguments","_ref3","data","stringify","_x","renderCipherAndCurrentState","duplicateChars","currentStateChars","cipherChar","cipherSegments","text","maxLineLength","words","lines","currentLine","push","splitIntoWords","charCounter","sentence","segments","start","result","segment","getStartIndices","puzzleScrollViewViewColumn","segmentIndex","puzzleScrollViewViewRow","charIndex","index","isSelected","isHint","isSameCipher","isDuplicate","isPunctuation","puzzleScrollViewCharSet","textTransform","marginBottom","fontweight","marginLeft","log","opacity","borderBottomWidth","marginTop","selectedCipherChar","nextIndex","newStateJoin","currentChar","checkIfSolved","prevData","updatedPuzzles","_objectSpread","Date","toISOString","setTimeout","newSelectedIndex","setNextNonHintIndex","goToNextPuzzle","puzzle_number","SafeAreaView","container","titleBarContainer","notTitleBarContainer","_ref4","currentPuzzleId","onSelect","Object","puzzleMenuItem","puzzleId","prevPuzzleData","settingsMenu","menuItemText","AboutBiblegram","onClose","puzzleContainer","values","duplicates","reduce","acc","filter","cipherCharIndexes","Set","size","uniqueChars","_toConsumableArray","solvedContainer","solvedPuzzle","solvedReference","Button","ConfettiCannon","count","origin","x","y","fadeOut","explosionSpeed","fallSpeed","mainContainer","puzzleScrollView","ScrollView","puzzleScrollViewView","hintsContainer","hintText","keyboardContainer","Keyboard","renderPuzzle","_ref5","aboutBiblegram","aboutTitle","closeButton","closeButtonText","flex","mainPuzzleContainer","name","flexGrow","padding","paddingTop","paddingLeft","flexShrink","alignContent","textAlign","insideMainContainerBottom","cipherText","inputText","flexWrap","alignSelf","paddingBottom","paddingRight","MarginVertical","borderBottomColor","aboutText","paddingHorizontal","paddingVertical","fontStyle","keyBoardContainerTop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}